# Generated by Django 5.0.6 on 2024-07-20 07:04

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('horaire_univ', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, max_length=50, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('user_type', models.CharField(choices=[('admin', 'Admin'), ('cp', 'Chef de prom'), ('enseignant', 'Enseignant')], max_length=10)),
                ('groups', models.ManyToManyField(blank=True, related_name='myuser_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='myuser_set', to='auth.permission')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Enseignant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('niveau_ens', models.CharField(blank=True, max_length=10)),
                ('id_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='User.myuser')),
            ],
        ),
        migrations.CreateModel(
            name='Chef_Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_anacad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='horaire_univ.anacad')),
                ('id_promotion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='horaire_univ.promotion')),
                ('id_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='User.myuser')),
            ],
        ),
        migrations.CreateModel(
            name='Encadreur_faculte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_anacad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='horaire_univ.anacad')),
                ('id_faculte', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='horaire_univ.faculte')),
                ('id_ens', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='User.enseignant')),
            ],
            options={
                'unique_together': {('id_faculte', 'id_anacad')},
            },
        ),
    ]
